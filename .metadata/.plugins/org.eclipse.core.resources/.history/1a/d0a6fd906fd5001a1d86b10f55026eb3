package com.innoventes.user.service;


import java.util.HashMap;
import java.util.Map;

import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;

import com.ayusha.services.common.exceptions.DataPersistenceOperationException;
import com.ayusha.services.common.exceptions.InvalidServiceRequestException;
import com.ayusha.user.data.models.EmployeeDataModel;
import com.custom.logger.logging.Logger;
import com.custom.logger.manager.LogManager;
import com.innoventes.user.services.entity.EmployeeEntity;
import com.innoventes.user.services.repository.IEmployeeRepository;


/**
 * 
 * @author author1
 * Date : 03-Aug-2020
 * Ticket Model class
 * 
 * 1. Recording (single):
 *      a. Persisting in DB
 *      b. on Success - sending 
 *      c. assigning service invoking
 * 
 * 2. Update:
 *     a. On change of status -
 *     
 * 3. Batch Recording:
 *     a.  Persisting in DB
 *     b. on Success - 
 *     c. assigning service invoking - Individually
 *      
 *  4. Search:
 *      a. search based on date, user, customer,logged date, issue,servicetype,serialnumber
 *      
 *  5. Sorting:
 *      a. soring based on logged date,status,servicetype (ASC | DSC)
 */
@Service
public class EmployeeService implements IEmployeeService{

	
	/** LOGGER **/
	private static Logger LOG = LogManager.getLogger(EmployeeService.class);
	
	/** repository **/
	@Autowired
	private IEmployeeRepository iEmployeeRepository;
	
	/**
	 * default constructor
	 */
	public EmployeeService() {
		LOG.info("Employee Service Constructor");
	}	
	@Override
	public ResponseEntity<Map<String, String>> saveAdd(EmployeeDataModel userDataModel)
			throws DataPersistenceOperationException, InvalidServiceRequestException {
		// TODO Auto-generated method stub
		LOG.info("HERE"+userDataModel);
		EmployeeEntity employeeEntity = new EmployeeEntity();
		Map<String,String> response = new HashMap<String, String>();
		BeanUtils.copyProperties(userDataModel, employeeEntity);
		EmployeeEntity entity=iEmployeeRepository.save(employeeEntity);
		response.put("message", "Employee Register successfully");
		return  ResponseEntity.ok().body(response);
	}

}
